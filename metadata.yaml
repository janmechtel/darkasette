plugins:
  datasette-dashboards:
    my-dashboard:
      title: Darkasette Dashboard
      description: A dashboard of the dark web.
      layout:
        - [analysis-note, services-count]
        - [analysis-note, events-count]
        - [languages, services-titles]
        - [latest-services-up, latest-services-down]

      charts:
        events-count:
          title: Total number of events
          db: darkasette
          query: >-
            SELECT count(*) as count 
            FROM pings
          library: metric
          display:
            field: count
            prefix:
            suffix:
        services-count:
          title: Total number of services
          db: darkasette
          query: >-
            SELECT count(DISTINCT HiddenService) as count 
            FROM pings
          library: metric
          display:
            field: count
            prefix:
            suffix:
        analysis-note:
          library: markdown
          display: |-
            # Analysis notes
            > A [datasette](https://datasette.io/) exploration of the [Hunchly Dark Web Reports](https://www.hunch.ly/darkweb-osint/)
        services-titles:
          title: Word cloud of services titles
          db: darkasette
          query: >-
            SELECT
              b.value AS word,
              COUNT(*) AS frequency
            FROM (
                SELECT '["' || replace(replace(lower(replace(trim(replace(Title,'"','')), ' ', '", "')), CHAR(9), ''), CHAR(10), '') || '"]' AS array
                FROM (
                  SELECT DISTINCT Title
                  FROM pings
                ) 
                WHERE Title is not null
                AND json_valid('["' || replace(replace(lower(replace(trim(replace(Title,'"','')), ' ', '", "')), CHAR(9), ''), CHAR(10), '') || '"]') = 1
              ) a,
              json_each(a.array) b
            WHERE length(b.value) > 3
            GROUP BY b.value
            ORDER BY frequency DESC
            LIMIT 100
          library: vega
          display:
            scales:
              - name: color
                type: ordinal
                domain: { data: table, field: word }
                range: ["#d5a928", "#652c90", "#939597"]
            marks:
              - type: text
                from: { data: table }
                encode:
                  enter:
                    text: { field: word }
                    align: { value: center }
                    baseline: { value: alphabetic }
                    fill: { scale: color, field: "word" }
                  update:
                    fillOpacity: { value: 1 }
                  hover:
                    fillOpacity: { value: 0.5 }
                transform:
                  - type: wordcloud
                    size: [{ signal: width }, { signal: height }]
                    text: { field: word }
                    rotate: 0
                    font: Helvetica Neue, Arial
                    fontSize: { field: datum.frequency }
                    fontWeight: "300"
                    fontSizeRange: [12, 56]
                    padding: 2
        latest-services-up:
          title: Latest services
          db: darkasette
          query: >-
            SELECT
              title,
              LastContactedDate,
              LastContactedTime,
              HiddenService
            FROM pings 
            WHERE TRUE
              AND Sheetname = "New Today"
              AND Title is not null
            ORDER BY LastContactedDate, LastContactedTime DESC LIMIT 5
          library: table
          display:
        latest-services-down:
          title: Latest disappearing services
          db: darkasette
          query: >-
            SELECT
              LastUpDate,
              HiddenService
            FROM pings WHERE TRUE
              AND LastUpDate IS NOT NULL
            ORDER BY LastUpDate DESC LIMIT 5
          library: table
          display:
        languages:
          title: Number of services by language
          db: darkasette
          query: >-
            SELECT
              Language as language,
              count(DISTINCT HiddenService) as count
            FROM pings
            WHERE TRUE
            AND Language is not null
            GROUP BY Language
            ORDER BY count DESC
          library: vega-lite
          display:
            mark: { type: arc, tooltip: true }
            params:
              - name: highlight
                select: { fields: [language], type: point, "on": mouseover }
                bind: legend
            encoding:
              color: { field: language, type: nominal }
              theta: { field: count, type: quantitative }
              opacity:
                condition: { param: highlight, value: 1 }
                value: 0.2